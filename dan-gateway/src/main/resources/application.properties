spring.cloud.loadbalancer.ribbon.enabled = false

spring.cloud.gateway.routes[0].id=clientes
spring.cloud.gateway.routes[0].uri=lb://MS-CLIENTES
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/clientes/**
#spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/clientes/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[1].id=productos
spring.cloud.gateway.routes[1].uri=lb://MS-PRODUCTOS
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/productos/**
#spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/productos/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[2].id=pedidos
spring.cloud.gateway.routes[2].uri=lb://MS-PEDIDOS
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/pedidos/**




logging.level.org.springframework.cloud.gateway: TRACE
logging.level.reactor.netty: DEBUG

security.basic.enabled=false
management.security.enabled=false
#actuator
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=
management.metrics.web.server.request.autotime.enabled=true
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true

# CONFIGURACION NECESARIA PARA EUREKA
spring.application.name=DAN-GATEWAY
eureka.client.serviceUrl.defaultZone=${SPRING_EUREKA_DEFAULT_ZONE}
eureka.client.initialInstanceInfoReplicationIntervalSeconds=5
eureka.client.registryFetchIntervalSeconds: 5
eureka.instance.leaseRenewalIntervalInSeconds: 5
eureka.instance.leaseExpirationDurationInSeconds: 5
# FIN CONFIGURACION NECESARIA PARA EUREKA